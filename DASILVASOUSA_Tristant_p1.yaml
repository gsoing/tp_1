openapi: 3.0.1
info:
  title: Stop COVID
  description: Ma super API contre le COVID
  license:
    name: MIT
  version: 1.0.0
servers:
- url: http://petstore.swagger.io/v1
tags:
- name: User
  description: Everything that users can do
- name: Admin
  description: Everything that admins can do
  
paths:

  /user/profile/{id}:
    put:
      tags:
      - User
      summary: Update an existing profile
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      operationId: updateProfile
      requestBody:
        description: Profile object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/xml:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      responses:
        200:
          description: Profile response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Profile not found
          content: {}
        405:
          description: Validation exception
          content: {}
      x-codegen-request-body-name: body
      
  /user/profile:
    post:
      tags:
      - User
      summary: Add a new profile
      operationId: addProfile
      requestBody:
        description: Profile object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Profile'
          application/xml:
            schema:
              $ref: '#/components/schemas/Profile'
        required: true
      responses:
        200:
          description: Profile response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Profile'
        405: # ici j'aurais dit un 400 qui indique un body incorrect plutôt
             # qu'une 405 qui indique un mauvais content-type 
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
  
  # Plus simplement pkoi pas URL avec des queryParam
  # de plus si ce sont des listes on utilise des pluriels
  # /users?mail={mail} et /users?name={name}
  # Et la pagination aurait été bien
  /user/findPersonByName:
    get:
      tags:
      - User
      summary: Find a person by this name
      parameters:
      - name: firstName
        in: query
        required: true
        description: First name that the method needs to do the search
        schema:
          type: string
      operationId: findPersonByName
      responses:
        200:
          description: Person searh by the user
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/Person'
        404:
          description: Person not found
          content: {}
  
  /user/findPersonByEmail:
    get:
      tags:
      - User
      summary: Find a person by this email
      parameters:
      - name: email
        in: query
        required: true
        description: Email that the method needs to do the search
        schema:
          type: string
      operationId: findPersonByEmail
      responses:
        200:
          description: Person search by the user
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/Person'
        404:
          description: Person not found
          content: {}
  
  /user/contact:
    post:
      tags:
      - User
      summary: Add a new contact
      operationId: addContact
      requestBody:
        description: Contact object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/xml:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        200:
          description: Contact response
          content:
            application/json:
              schema:
                  $ref: '#/components/schemas/Contact'
        405:
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
  
  /user/contact/{id}:
    put:
      tags:
      - User
      summary: Update an existing contact
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      operationId: updateContact
      requestBody:
        description: Contact object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/xml:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        200:
          description: Contact response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Contact not found
          content: {}
        405:
          description: Validation exception
          content: {}
      x-codegen-request-body-name: body
  
  # Je ne comprends pas ce que vient faire l'id utilisateur ici
  # tu ne t'en sers pas dans la création d'un contact
  /user/findAllContact/{id}:
    get:
      tags:
      - User
      parameters:
      - name: id
        in: path
        description: id of the user, to search all the contact of this user
        required: true
        schema:
          type: integer
      summary: Find all the contact declare by the user
      operationId: findAllContact
      responses:
        200:
          description: All Contact created by the user
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/Contact'
        404:
          description: No contact found
          content: {}
          
  /user/deleteContact/{id}:
    delete: # On sait déjà que c'est un delete avec la méthode un simple DELETE /user/contact/{id} et en plus tu restais cohérent avec le reste de tes urls
      tags:
      - User
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      summary: Delete an existing contact
      operationId: deleteContact
      responses:
        200:
          description: Contact deleted by the user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Contact not found
          content: {}
  # Pareil pour la mise à jour du profil tu n'as pas besoin de l'id pkoi ici tu en as besoin   
  /user/declareCovid/{id}:
    put:
      tags:
      - User
      summary: Update an existing declaration
      parameters:
      - name: id
        in: path
        description: profile's id of the user
        required: true
        schema:
          type: integer
      operationId: declareCovid
      requestBody:
        description: Declaration object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Declaration'
          application/xml:
            schema:
              $ref: '#/components/schemas/Declaration'
        required: true
      responses:
        200:
          description: Declaration response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Declaration'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Declaration not found
          content: {}
        405:
          description: Validation exception
          content: {}
      x-codegen-request-body-name: body
      
  /admin/findUserByName:
    get:
      tags:
      - Admin
      summary: Find an user by this name
      parameters:
      - name: firstName
        in: query
        required: true
        description: First name that the method needs to do the search
        schema:
          type: string
      operationId: findUserByName
      responses:
        200:
          description: User search by the admin
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/Person'
        404:
          description: User not found
          content: {}
          
  /admin/findUserByEmail:
    get:
      tags:
      - Admin
      summary: Find an user by this email
      parameters:
      - name: email
        in: query
        required: true
        description: Email that the method needs to do the search
        schema:
          type: string
      operationId: findUserByEmail
      responses:
        200:
          description: User search by the admin
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/Person'
        404:
          description: User not found
          content: {}
  
  # Pourquoi une action dans ton url alors que dans les autres tu mets la ressources
  # /admin/users/{id}/profile ou /admin/users/{id}
  /admin/getUserProfile/{id}:
    get:
      tags:
      - Admin
      summary: Find an user's profile
      parameters:
      - name: id
        in: path
        required: true
        description: id of the user's profile
        schema:
          type: integer
      operationId: findUserProfile
      responses:
        200:
          description: User's profile search by the admin
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/Profile'
        404:
          description: User's profile not found
          content: {}
  #  Mëme remarque pour pour le user profile tu aurais du utiliser une ressource et non une action
  /admin/getUserContacts/{id}:
    get:
      tags: 
      - Admin
      summary: Find all the contacts of an user
      parameters:
      - name: id
        in: path
        required: true
        description: id of the user
        schema:
          type: integer
      operationId: getUserContacts
      responses:
        200:
          description: Contacts search by the admin
          content:
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/Contact'
        404:
          description: User's profile not found
          content: {}
  
  /admin/sendNotification:
    post:
      tags:
      - Admin
      summary: send a notif to several users
      operationId: sendNotification
      # Je pense qu'il y a une erreur car passer des objets dans l'url ca ma parait pas très lisible
      # il aurait fallu faire une DTO dédiée
      parameters:
      - name: notif
        in: query
        required: true
        description: notif that the method needs to send
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
      - name: users
        in: query
        required: true
        description: users who will receive the notif
        schema:
          type: array
          items:
            $ref: '#/components/schemas/Profile'
      responses:
        200:
          description: List of user contacted by the admin
          content: # Pourquoi retourné un profil ici ?
            application/json:
              schema:
                type: array
                items:  
                  $ref: '#/components/schemas/Profile'
        404:
          description: User not found
          content: {}
          
components:
  schemas:
  # Attention les objets manipulés entre la partie utilisateur et admin ne sont pas les mêmes
    Profile:
      required:
      - email
      - lastName
      type: object
      properties:
        id:
          type: integer
          format: int32 
        firstName:
          type: string
        lastName:
          type: string
        age:
          type: integer
          format: int32
        address:
          type: string
        email:
          type: string
        covidStatus:
          $ref: '#/components/schemas/Declaration'
        numberOfContacts:
          type: integer
          format: int32
      xml:
        name: Profile
    Person:
      required:
      - firstName
      - lastName
      - email
      type: object
      properties: 
        firstName: 
          type: string
        lastName:
          type: string
        email: 
          type: string
      xml:
        name: Person
    Contact:
      type: object
      properties:
        id:
          type: integer
          format: int32
        dateOfContact: 
          type: string
          format: date-time
        placeOfContact: 
          type: string
        typeOfContact:
          type: string
          enum: 
          - with mask
          - without mask
        person:
          $ref: '#/components/schemas/Person'
    Declaration:
      type: object
      properties:
        dateOfTest: 
          type: string
          format: date
        COVID: 
          type: boolean
    Notification:
      type: object
      properties:
        id: 
          type: integer
          format: int32
        sickPersonId:
          type: integer
          format: int32
        contactDate:
          type: string
          format: date