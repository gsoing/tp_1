openapi: 3.0.1
info:
  title: Stop COVID
  description: Ma super API contre le COVID
  termsOfService: http://stop-covid.swagger.io/v1
  contact:
    email: api-stop-covid@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
- url: https://stop-covid.swagger.io/stop-covid
- url: http://stop-covid.swagger.io/stop-covid
tags:
- name: User
  description: Everything about users
- name: Contact
  description: Everything about contact
- name: Profil
  description: about user profil
- name: Admin
  description: Actions for admin
  
paths:
  /user:
    post:
      tags:
      - Profil
      summary: Create a new user profil
      description: Add a new user profil in database. The user is provide in the body. Allow user to create user profil
      operationId: createUser
      requestBody:
        description: User profil that needs to be added in the Database
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid user supplied
          content: {}
        405:
          description: Invalid input
          content: {}
      x-codegen-request-body-name: body
    put:
      tags:
      - Profil
      summary: Update an existing user profil
      description: Update data of the user profil provided in the body. Allow User to update their user profil
      operationId: updateUser
      requestBody:
        description: User profil that needs to be added to the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: User not found
          content: {}
        405:
          description: Validation exception
          content: {}
      x-codegen-request-body-name: User
  /user/name/{name}:
    get:
      tags:
      - User
      summary: Find users by name
      description: Find users by a name. Return a list of users as several user can have the same name. Allow users to search user to declare contact or Admins to search a user.
      operationId: findUserbyName
      parameters:
      - name: name
        in: path
        description: Name values that need to be considered for filter
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/dataUsers'
            application/json:
              schema:
                $ref: '#/components/schemas/dataUsers'
        400:
          description: Invalid status value
          content: {}
  /user/mail/{mail}:
    get:
      tags:
      - User
      summary: Find users by mail
      description: Find users by a mail. Return a list of users. Several user can have the same mail even if it is unlikely the system did not check if the mail is unique when the user signed up. Allow users to search user to declare contact or admims to search user.
      operationId: findUserByMail
      parameters:
      - name: mail
        in: path
        description: mail values that need to be considered for filter
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/dataUsers'
            application/json:
              schema:
                $ref: '#/components/schemas/dataUsers'
        400:
          description: Invalid status value
          content: {}
  /user/userId/{id}:
    get:
      tags:
      - User
      summary: Find a user by Id
      description: Returns a single user. The id is unique for a user. It is generated
        when a new user is added
      operationId: getUserById
      parameters:
      - name: id
        in: path
        description: id of user to return
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: User not found
          content: {}
  /user/{userId}/viewProfil:
    get:
      tags:
      - Admin
      summary: get profil by user
      description: Allow admins to view the profil of a user with the user's id. The response return one user because the id of a user is unique
      operationId: getProfilByUser
      parameters:
      - name: userId
        in: path
        description: ID of user to update
        required: true
        schema:
          type: string
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/UserProfil'
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfil'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: User not found
          content: {}
  /user/{IdUser}/covidStatement:
    put:
      tags:
      - User
      summary: covid statement of a user
      description: Allow users to declare that they are sick. They have to declare the date et the result of thier test
      operationId: updateUserStatusCovid
      parameters:
      - name: IdUser
        in: path
        description: ID of user to update
        required: true
        schema:
          type: string
      requestBody:
        description: 'test information : result and date'
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/CovidTest'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: User not found
          content: {}
      x-codegen-request-body-name: body
  /contact:
    post:
      tags:
      - Contact
      summary: Create a new contact
      description: create a new contact provided in the body. Allow user to create a new contact with someone
      operationId: createContact
      requestBody:
        description: Contact to create
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/xml:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        200:
          description: successful operation
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Contact'
        400:
          description: Invalid user supplied
          content: {}
        405:
          description: Invalid input
          content: {}
    put:
      tags:
      - Contact
      summary: Update an existing contact
      description: Update data of the contact provided in the body. Allow user to update one of his contact.
      operationId: updateContact
      requestBody:
        description: contact to update
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Contact'
          application/xml:
            schema:
              $ref: '#/components/schemas/Contact'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Contact'
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Pet not found
          content: {}
        405:
          description: Validation exception
          content: {}
      x-codegen-request-body-name: contact
  /contact/{id}:
    get:
      tags:
      - Contact
      summary: Find a contact by id
      description: Returns a single contact
      operationId: getContactById
      parameters:
      - name: id
        in: path
        description: id of contact to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Contact'
            application/json:
              schema:
                $ref: '#/components/schemas/Contact'
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: User not found
          content: {}
    delete:
      tags:
      - Contact
      summary: Delete a contact by id
      description: deletes a single contact from his id. Allow user to delete one of his contact
      operationId: deleteContact
      parameters:
      - name: id
        in: path
        description: id of contact to return
        required: true
        schema:
          type: integer
          format: int64
      responses:
        204:
          description: contact deleted
          content: {}
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: User not found
          content: {}
  /contact/user/{IdUser}:
    get:
      tags:
      - Contact
      summary: Find contacts by user
      description: Finds all contact of a user. Users and administrateurs need to list the contacts of a user.
      operationId: findContactByUser
      parameters:
      - name: IdUser
        in: path
        description: id of the user
        required: true
        schema:
          type: integer
          format: int64
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/Contacts'
            application/json:
              schema:
                $ref: '#/components/schemas/Contacts'
        400:
          description: Invalid status value
          content: {}
  /contact/alertContacts:
    post:
      tags:
      - Admin
      summary: Notify a list of contact user
      description: Allow admins to notify contact. Multiple id of user can be provided with comma separated integer. All these ids will be notify
      operationId: notify
      parameters:
      - name: ids
        in: query
        description: all id provided would be notify
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: integer
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notifications'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Notifications'
        400:
          description: Invalid status value
          content: {}
components:
  schemas:
    User:
      required:
      - lastName
      - mail
      type: object
      properties:
        id:
          type: integer
          format: int64
        mail:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        age:
          type: integer
          format: int64
        address:
          type: string
    UserProfil:
      required:
      - covid
      - lastName
      - mail
      - numberContact
      type: object
      properties:
        id:
          type: integer
          format: int64
        mail:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
        age:
          type: integer
          format: int64
        address:
          type: string
        covid:
          type: boolean
          description: true if the user is sick
        numberContact:
          type: integer
          description: Number of contact of the user
          format: int64
    dataUser:
      required:
      - lastName
      - mail
      type: object
      properties:
        id:
          type: integer
          format: int64
        mail:
          type: string
          format: email
        firstName:
          type: string
        lastName:
          type: string
    dataUsers:
      type: array
      items:
        $ref: '#/components/schemas/dataUser'
    Contact:
      required:
      - date
      - id
      - location
      - masque
      - user
      type: object
      properties:
        id:
          type: integer
        date:
          type: string
        location:
          type: string
        masque:
          type: boolean
          description: 'true if person have masque during contact '
        user:
          $ref: '#/components/schemas/dataUser'
    Notifications:
      type: array
      description: List of alerts
      items:
        required:
        - date
        - illnessId
        type: object
        properties:
          illnessId:
            type: integer
          date:
            type: string
            format: date-time
    Contacts:
      type: array
      items:
        $ref: '#/components/schemas/Contact'
    CovidTest:
      required:
      - day
      - month
      - result
      - year
      type: object
      properties:
        day:
          type: integer
        month:
          type: string
        year:
          type: string
        result:
          type: boolean
